# name of the action
name: CI/CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events to the main/master branch
  push:
    branches:
    - main
    - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on Ubuntu 16.04
    runs-on: ubuntu-16.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Ascii art to bring out the cuteness
      - name: RUNNING ASCII ART!
        run: |
          echo -e "
            __  __            _     _ _         
          |  \/  |          | |   (_) |        
          | \  / | ___   ___| |__  _| | _____  
          | |\/| |/ _ \ / __| '_ \| | |/ / _ \ 
          | |  | | (_) | (__| | | | |   < (_) |
          |_|  |_|\___/ \___|_| |_|_|_|\_\___/ 
                                      "
          sleep 2s

      # moving the code to the ubuntu image
      - uses: actions/checkout@v2
        name: CHECK OUT THE CODE TO THE IMAGE
        
      - name: Security and Licence Scan
        # You may pin to the exact commit or the version.
        # uses: ShiftLeftSecurity/scan-action@54980bbdae434b8e7903cfcffa98a2601c207962
        uses: ShiftLeftSecurity/scan-action@v1.3.0
        with:
          # Source directory to scan. Defaults to /github/workspace
          src: # optional, default is /github/workspace
          # Output directory for the generated reports. Defaults to /github/workspace/reports
          output: # optional, default is /github/workspace/reports
          # Project type. Eg: credscan, java, python, nodejs, depscan etc. Comma separated values allowed.
          type: nodejs
      
      # pushing the  artifact into the heroku registry and deploy
      - name: BUILD, PUSH and DEPLOY to HEROKU #set the whatever name you want to this step
        env:
          # this environment variable can be saved in github repository -> settings -> secrets -> new repository secret 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          APP_NAME: ${{ 'mochiko' }}

        #Step that will be run after build is done.
        run: |
          docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
          heroku container:push web -a $APP_NAME
          heroku container:release web -a $APP_NAME
  
      # pinging the website
      - name: RUNNING INTEGRATION TEST
        # You may pin to the exact commit or the version.
        # uses: Leocardoso94/is-my-site-up@dd9b46848d4e3e871dfb20cf98de8fa6caf35324
        uses: Leocardoso94/is-my-site-up@v1.2
        with:
          # Site's url
          site: https://mochiko.herokuapp.com


